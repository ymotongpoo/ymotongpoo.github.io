<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Diaries on depository</title>
    <link>https://ymotongpoo.github.io/diary/index.xml</link>
    <description>Recent content in Diaries on depository</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ja-jp</language>
    <lastBuildDate>Mon, 13 Feb 2017 01:25:00 +0900</lastBuildDate>
    <atom:link href="https://ymotongpoo.github.io/diary/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>家のルータをDD-WRTに変更した</title>
      <link>https://ymotongpoo.github.io/diary/2017/02/13/dd-wrt/</link>
      <pubDate>Mon, 13 Feb 2017 01:25:00 +0900</pubDate>
      
      <guid>https://ymotongpoo.github.io/diary/2017/02/13/dd-wrt/</guid>
      <description>

&lt;h2 id=&#34;dd-wrtに変更した&#34;&gt;DD-WRTに変更した&lt;/h2&gt;

&lt;p&gt;どうもOCNから提供されているルータ兼終端機器の調子が悪いので、終端機器側の無線LAN機能を使うのを止めて、だいぶ前に使わなくなって放置されていたWZR-HP-AG300HをDD-WRTにした。&lt;/p&gt;

&lt;p&gt;設定を頻繁に変えていて、安定しない時間が少しあったが（例：設定したSSIDに接続できない）、しばらくして無事安定して接続できるようになったので、無線LAN経由で接続していた端末の設定をすべて変えた。Chromecastなども安定して接続できているし、PCもだいぶ快適に繋がっている。&lt;/p&gt;

&lt;p&gt;まだ解決できていない点としては、上位のネットワークでavahi-daemonで吐いているホスト名を参照できていないので、その辺をどうにかしたい。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>bintrayが腐ってる</title>
      <link>https://ymotongpoo.github.io/diary/2017/01/24/bintray-is-not-working-correctly/</link>
      <pubDate>Tue, 24 Jan 2017 23:40:00 +0900</pubDate>
      
      <guid>https://ymotongpoo.github.io/diary/2017/01/24/bintray-is-not-working-correctly/</guid>
      <description>

&lt;h2 id=&#34;gitlab-ciでdebパッケージをbintrayに上げたいが&#34;&gt;GitLab CIでdebパッケージをbintrayに上げたいが&lt;/h2&gt;

&lt;p&gt;ここしばらくdocker imageを作って遊んでるんだけど、GoのNightly Buildをして公開しようと思ってbintrayにアップロードしようとしている。
しかしながら、どうもバイナリファイルだけアップロードできなくて、 @mopemope にも聞いてみたが同様のことが起きているようだ。&lt;/p&gt;

&lt;p&gt;実際にやっていることは単純で &lt;code&gt;curl&lt;/code&gt; でこういうコマンドを叩いているだけ。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ curl -T golang-nightly_${BUILD_VER}_amd64.deb -uymotongpoo:${BINTRAY_API_KEY} https://api.bintray.com/content/ymotongpoo/deb/golang/${BUILD_VER}/golang-nightly_${BUILD_VER}_amd64.deb;deb_distribution=jessie;deb_component=main;deb_architecture=amd64;publish=1;override=1
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;しかし次のようなエラーが出ている。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;{&amp;quot;message&amp;quot;:&amp;quot;Unable to upload files: Debian distribution, component and architecture were not found on repo and were not specified&amp;quot;}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;指定しているdistribution, component, architectureいずれも正しいんだけどなあ。bintrayに空のパスだけが作成されて終了してしまう。&lt;/p&gt;

&lt;p&gt;とりあえず逃げ道として &lt;a href=&#34;https://packagecloud.io/&#34;&gt;packagecloud.io&lt;/a&gt; にレポジトリを作ってみた。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Udemy Day2</title>
      <link>https://ymotongpoo.github.io/diary/2017/01/16/udemy-day2/</link>
      <pubDate>Mon, 16 Jan 2017 14:59:46 +0900</pubDate>
      
      <guid>https://ymotongpoo.github.io/diary/2017/01/16/udemy-day2/</guid>
      <description>

&lt;h2 id=&#34;section-4-5&#34;&gt;Section 4-5&lt;/h2&gt;

&lt;p&gt;データから特徴量にしないと機械学習できませんよという話。
文字列や画像をどのように特徴量ベクトルに変換できるか。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://www.gutenberg.org/&#34;&gt;Project Gutenberg&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;lecture-41-53&#34;&gt;Lecture 41-53&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;データ取得&lt;/li&gt;
&lt;li&gt;特徴量抽出&lt;/li&gt;
&lt;li&gt;特徴選択&lt;/li&gt;
&lt;li&gt;正規化&lt;/li&gt;
&lt;li&gt;識別&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;欠損値、外れ値などは前処理として自分で頑張って取り除くか加工をしなければいけない。&lt;/p&gt;

&lt;p&gt;欠損値の場合&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;取り除く&lt;/li&gt;
&lt;li&gt;平均値で埋める(&lt;code&gt;Imputer&lt;/code&gt;)。このときの対応として、外れ値を先に外しておくか、中央値を使う。&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;また次元の削減に主成分分析を使うことができる。主成分を寄与率順にいくつか選択することだけで予測率を残したまま次元数を少なくできる。&lt;/p&gt;

&lt;p&gt;とりあえず何かしらの次元変換をする流れは線形・非線形によらず&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;変換モデルを用意する&lt;/li&gt;
&lt;li&gt;&lt;code&gt;fit()&lt;/code&gt; する&lt;/li&gt;
&lt;li&gt;&lt;code&gt;transform()&lt;/code&gt; する&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;という手順になる。非線形変換で次数を増やすときは最後の手段にしよう。&lt;/p&gt;

&lt;p&gt;標準化、正規化は次元削減よりもなによりも大事なので絶対にやろう。&lt;/p&gt;

&lt;p&gt;ZCA白色化はDeep Learningなどによく使われる。&lt;/p&gt;

&lt;h2 id=&#34;secition-6&#34;&gt;Secition 6&lt;/h2&gt;

&lt;h3 id=&#34;lecture-54-61&#34;&gt;Lecture 54-61&lt;/h3&gt;

&lt;p&gt;2クラス問題であればconfusion matrixを作って、本当に予測が間違っていたらまずいものの個数を見極める。
さらに SciKit Learn には &lt;code&gt;classification_report&lt;/code&gt; という便利なものがある。&lt;/p&gt;

&lt;p&gt;検出したい値のrecallが大事。&lt;/p&gt;

&lt;p&gt;&lt;code&gt;precision_recall_fscore_support&lt;/code&gt; がすごく便利っぽい。&lt;/p&gt;

&lt;p&gt;多クラス問題でも &lt;code&gt;classification_report&lt;/code&gt; の値を元にどのクラスの認識率が悪いか判断できる。&lt;/p&gt;

&lt;h3 id=&#34;キーワード&#34;&gt;キーワード&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;χ二乗検定&lt;/li&gt;
&lt;li&gt;主成分分析 (PCA)&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>DockerでJupyter Notebookの環境を作り始めた</title>
      <link>https://ymotongpoo.github.io/diary/2017/01/15/docker-jupyter/</link>
      <pubDate>Sun, 15 Jan 2017 23:49:28 +0900</pubDate>
      
      <guid>https://ymotongpoo.github.io/diary/2017/01/15/docker-jupyter/</guid>
      <description>

&lt;h2 id=&#34;dockerでjupyter-notebookの環境を作り始めた&#34;&gt;DockerでJupyter Notebookの環境を作り始めた&lt;/h2&gt;

&lt;p&gt;Scikit Learnを使って機械学習の勉強をし始めたんだけれども、どうせならDocker Imageを使おうかと思った。見てみたら、公式で配布しているものは&lt;a href=&#34;https://github.com/jupyter/docker-stacks/blob/master/base-notebook/Dockerfile#L59-L73&#34;&gt;Anacondaを使っている&lt;/a&gt;ので正直気に食わない。&lt;/p&gt;

&lt;p&gt;ということでAlpine Linuxを使って最小構成のDocker Imageを自前で作り始めた。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/ymotongpoo/dockerfiles/blob/master/jupyter-notebook/Dockerfile.jupyter-alpine&#34;&gt;Dockerfile.jupyter-alpine&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;AlpineにはBLASとLAPACKのパッケージがないので自前ビルドする必要があり、そこでちょっとはまった。&lt;/p&gt;

&lt;h2 id=&#34;婚約指輪を受け取りに行った&#34;&gt;婚約指輪を受け取りに行った&lt;/h2&gt;

&lt;p&gt;昨年末に取り寄せ注文した婚約指輪を今日受け取りに行った。こんな機会でもなければ絶対に買わないようなものなので、なかなかの体験をした。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Udemy Day1</title>
      <link>https://ymotongpoo.github.io/diary/2017/01/12/udemy-day1/</link>
      <pubDate>Thu, 12 Jan 2017 14:04:30 +0900</pubDate>
      
      <guid>https://ymotongpoo.github.io/diary/2017/01/12/udemy-day1/</guid>
      <description>

&lt;h2 id=&#34;section-3&#34;&gt;Section 3&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.youtube.com/playlist?list=PLDVKrmVEl_Wt0WoaQqDfRVt9EK1lQjZu5&#34;&gt;YouTubeのscikit-learnチュートリアル集（英語）&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.youtube.com/playlist?list=PLQVvvaa0QuDfKTOs3Keq_kaG2P55YRn5v&#34;&gt;Machine Learning with Python&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.kamishima.net/mlmpyja/&#34;&gt;機械学習の Python との出会い Machine Learning Meets Python&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.slideshare.net/yasutomo57jp/pythondeep-learning-60544586&#34;&gt;Pythonによる機械学習入門〜基礎からDeep Learningまで〜（電子情報通信学会総合大会2016）&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.slideshare.net/yasutomo57jp/python-svmdeep-learning&#34;&gt;Pythonによる機械学習入門 ～SVMからDeep Learningまで～（SSII2016）&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.amazon.co.jp/dp/4844380605/&#34;&gt;Python機械学習プログラミング 達人データサイエンティストによる理論と実践, インプレス, 2016&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.amazon.co.jp/dp/4873116988/&#34;&gt;実践 機械学習システム, オライリージャパン, 2014&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;lecture-29-33&#34;&gt;Lecture 29-33&lt;/h2&gt;

&lt;h3 id=&#34;scikit-learnでの大まかな手順&#34;&gt;scikit-learnでの大まかな手順&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;データセットを用意する&lt;/li&gt;
&lt;li&gt;学習用とテスト用にデータセットを分ける&lt;/li&gt;
&lt;li&gt;識別器を用意する&lt;/li&gt;
&lt;li&gt;学習させる&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;データセットを分ける場合はランダムに分けるように気をつけて。また分割を何度も行って、正解率の平均と標準偏差を出しておこう。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Cross Validation (交差確認)

&lt;ul&gt;
&lt;li&gt;K-fold CV (K=3, 5, 10)&lt;/li&gt;
&lt;li&gt;Leave one out&lt;/li&gt;
&lt;li&gt;Leave group out&lt;/li&gt;
&lt;li&gt;Hold out&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Stratified (層化)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;識別器はScikit Learnにいろいろプリセットで用意されていて楽ちん。&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;from sklearn import linear_model
cls = linear_model.LogisticRegression()
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;学習させるのは識別器の &lt;code&gt;fit()&lt;/code&gt; メソッドを使うだけ。&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;cls.fit(x_train, y_train)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;サンプル数によってやり方が変わってくる。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;N ~ 10 : 機械学習する意味ない&lt;/li&gt;
&lt;li&gt;N ~ 100 : Leave one out CVで可能かも。でもデータは増やしたい。&lt;/li&gt;
&lt;li&gt;N ~ 1000 : まともになってくる。10-fold CVで可能。&lt;/li&gt;
&lt;li&gt;N ~ 10000 : 良い性能が期待できる。K-fold CV (K &amp;lt; 10)&lt;/li&gt;
&lt;li&gt;N ~ 100000 : 実応用。Hold-out以外は無理。かなり工夫が必要。&lt;/li&gt;
&lt;li&gt;N &amp;gt; 100000 : 最先端&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;キーワードを拾っていく&#34;&gt;キーワードを拾っていく&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;ロジスティクス回帰&lt;/li&gt;
&lt;li&gt;Cross Validation&lt;/li&gt;
&lt;li&gt;Hold out&lt;/li&gt;
&lt;li&gt;Stratified&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>My Wedding Fair</title>
      <link>https://ymotongpoo.github.io/diary/2017/01/09/wedding-fair/</link>
      <pubDate>Mon, 09 Jan 2017 23:25:34 +0900</pubDate>
      
      <guid>https://ymotongpoo.github.io/diary/2017/01/09/wedding-fair/</guid>
      <description>

&lt;h2 id=&#34;werckerのバグを直した&#34;&gt;werckerのバグを直した&lt;/h2&gt;

&lt;p&gt;結局うまくいかなかった原因はSSHのfingerprintを登録してなかったことが原因だった。これはブログのほうにもまとめておこう。&lt;/p&gt;

&lt;h2 id=&#34;my-wedding-fairに参加した&#34;&gt;My Wedding Fairに参加した&lt;/h2&gt;

&lt;p&gt;結婚式場が開催する説明会に参加してきた。大量の書類をもらって帰ってきた。1回目の打ち合わせまでにやることが大量にあるので、それまでに早めに準備をしておこうと思う。まずはスプレッドシートに必要な項目を全部書き写すところからかな。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>仕事始めとWindows 10の開発環境の公開</title>
      <link>https://ymotongpoo.github.io/diary/2017/01/05/windows10/</link>
      <pubDate>Thu, 05 Jan 2017 22:42:37 +0900</pubDate>
      
      <guid>https://ymotongpoo.github.io/diary/2017/01/05/windows10/</guid>
      <description>

&lt;h2 id=&#34;仕事始め&#34;&gt;仕事始め&lt;/h2&gt;

&lt;p&gt;今日は仕事始めだった。メールのスレッドが100以上未読だったうえに、ちょくちょく来てたメールにスターをつけて「後でやる」化してたので、合計で150以上のスレッドをさばいた計算になる。&lt;/p&gt;

&lt;p&gt;今日は例外だったかもしれないけれど、年末年始にコードばかり書いてたときは集中できてたなあと思う。やっぱりこういう仕事の合間にどれだけコード書けるかが今年の課題になりそうだなあ。&lt;/p&gt;

&lt;h2 id=&#34;windows-10の開発環境を公開した&#34;&gt;Windows 10の開発環境を公開した&lt;/h2&gt;

&lt;p&gt;年末年始に実家に帰ったときにXPS 13の開発環境を整えた作業ログをブログで公開したら思った以上に反響がきてた。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://ymotongpoo.hatenablog.com/entry/2017/01/05/101233&#34;&gt;Windows 10の開発環境を整えた&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;はてブの数の割にコメントがみんなマイルドなものだったのが意外だった。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>箱根を見てvsc-licenserを更新して映画を見た</title>
      <link>https://ymotongpoo.github.io/diary/2017/01/03/rogue-one/</link>
      <pubDate>Tue, 03 Jan 2017 23:16:44 +0900</pubDate>
      
      <guid>https://ymotongpoo.github.io/diary/2017/01/03/rogue-one/</guid>
      <description>

&lt;h2 id=&#34;箱根駅伝を見た&#34;&gt;箱根駅伝を見た&lt;/h2&gt;

&lt;p&gt;今年も青山学院大学が優勝して、三連覇した。むちゃくちゃ早くて、今年も復路で繰り上げスタートが起きてしまった。&lt;/p&gt;

&lt;p&gt;山梨学院大学もついに繰り上げスタートになり、来年は予選会からスタート。頑張ってほしい。&lt;/p&gt;

&lt;h2 id=&#34;vsc-licenserを更新した&#34;&gt;vsc-licenserを更新した&lt;/h2&gt;

&lt;p&gt;0.5.1 をリリースした。0.5.0を昨日リリースして、これで対応ライセンスと対応言語はかなり必要なものがそろったので、次は機能を拡充させていく段階だと思う。&lt;/p&gt;

&lt;h2 id=&#34;ローグ-ワンを観た&#34;&gt;ローグ・ワンを観た&lt;/h2&gt;

&lt;p&gt;コアなファンではないものの、スターウォーズは好きなので、三が日の空いている時期を狙って「ローグ・ワン」を観てきた。&lt;/p&gt;

&lt;p&gt;エピソード３と４の間という事前情報は知っていたけれど、どちらかというとエピソード４寄りだった。だいぶ時代設定は慎重に合わせていた印象で、エピソード４の出撃に至るまでの細かな穴埋めをしてくれた感じ。正月映画としていいものを観た。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>2017年元日</title>
      <link>https://ymotongpoo.github.io/diary/2017/01/01/new-year-day/</link>
      <pubDate>Sun, 01 Jan 2017 16:34:08 +0900</pubDate>
      
      <guid>https://ymotongpoo.github.io/diary/2017/01/01/new-year-day/</guid>
      <description>

&lt;h2 id=&#34;お年玉をもらった&#34;&gt;お年玉をもらった&lt;/h2&gt;

&lt;p&gt;「誕生日プレゼント」と言いつつお年玉をもらった。やっぱり自活していても親子の関係は変わらないものだ。&lt;/p&gt;

&lt;h2 id=&#34;msys2とchocolateyで作ったnode-js環境がぶっこわれた&#34;&gt;MSYS2とchocolateyで作ったnode.js環境がぶっこわれた&lt;/h2&gt;

&lt;p&gt;npmで &lt;code&gt;vscode&lt;/code&gt; パッケージをアップデートしたらぶっ壊れた。具体的にはVisual Studio Codeが &lt;code&gt;vscode&lt;/code&gt; パッケージを参照できなくなった。&lt;/p&gt;

&lt;h2 id=&#34;むかついたのでmsys2環境つぶした&#34;&gt;むかついたのでMSYS2環境つぶした&lt;/h2&gt;

&lt;p&gt;結局 MSYS2 の環境と Windows ネイティブの環境を同居させようという精神良くないっていう話で、MSYS2環境をぶっ潰して、PowerShell（+Cmder）の環境でどんどん行くことして、Windowsネイティブだけでやっていくことにした。具体的に入れた環境は次の通り。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/spf13/hugo/&#34;&gt;spf13/hugo&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/coreybutler/nvm-windows/&#34;&gt;coreybutler/nvm-windows&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/dahlbyk/posh-git&#34;&gt;dahlbyk/posh-git&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/flofreud/posh-gvm&#34;&gt;flofreud/posh-gvm&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;なんかPowerShellは &lt;code&gt;Install-Module&lt;/code&gt; っていうコマンドがあって、PowerShellのコマンドライン上でインストール出来てすごくいい。&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-powershell&#34;&gt;&amp;gt; Install-Module posh-git -Scope CurrentUser
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;chocolateyをインストールしてるのでこれでもインストールできるけど。&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-powershell&#34;&gt;&amp;gt; choco install poshgit
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>誕生日</title>
      <link>https://ymotongpoo.github.io/diary/2016/12/31/birthday/</link>
      <pubDate>Sat, 31 Dec 2016 12:16:08 +0900</pubDate>
      
      <guid>https://ymotongpoo.github.io/diary/2016/12/31/birthday/</guid>
      <description>

&lt;h2 id=&#34;1年間の振り返りとか&#34;&gt;1年間の振り返りとか&lt;/h2&gt;

&lt;p&gt;毎年恒例のエントリを書いた。内容が薄い。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://ymotongpoo.hatenablog.com/entry/2016/12/31/110228&#34;&gt;YAMAGUCHI::weblogの2016年を振り返る&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;また今年は前日に買ってよかったものを一覧にして書いた。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://ymotongpoo.hatenablog.com/entry/2016/12/29/232201&#34;&gt;2016年買ってよかったもの&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>帰省</title>
      <link>https://ymotongpoo.github.io/diary/2016/12/28/returning-to-home-place/</link>
      <pubDate>Wed, 28 Dec 2016 16:55:41 +0900</pubDate>
      
      <guid>https://ymotongpoo.github.io/diary/2016/12/28/returning-to-home-place/</guid>
      <description>

&lt;h2 id=&#34;高校の先生とご飯を食べる&#34;&gt;高校の先生とご飯を食べる&lt;/h2&gt;

&lt;p&gt;いつ実家に帰ろうかと考えていて、夏に高校の時の数学の先生と「年末にお会いしましょう」と言っていたことを思い出したので連絡を取ってみたら今日しか都合がつかないということで、さっそく荷物を持って帰ることにした。&lt;/p&gt;

&lt;h2 id=&#34;実家は寒い&#34;&gt;実家は寒い&lt;/h2&gt;

&lt;p&gt;実家に帰るのは春ぶりだが、相変わらず山梨は寒そうだ。一週間の天気予報をみたら、最高気温が10℃になっている日が一番気温が高く、それ以外の日はすべて1桁台。最低気温は氷点下だ。&lt;/p&gt;

&lt;p&gt;そういえば帰省の途中でモンベルのジオラインを買い足す予定だったのに忘れていた。しまったなあ。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>誕生日を祝ってもらった</title>
      <link>https://ymotongpoo.github.io/diary/2016/12/26/sushi/</link>
      <pubDate>Mon, 26 Dec 2016 23:50:07 +0900</pubDate>
      
      <guid>https://ymotongpoo.github.io/diary/2016/12/26/sushi/</guid>
      <description>

&lt;h2 id=&#34;時計を買ってもらった&#34;&gt;時計を買ってもらった&lt;/h2&gt;

&lt;p&gt;誕生日祝いともろもろを兼ねて時計を買ってもらった。大変良いものなので大切にしたい。&lt;/p&gt;

&lt;h2 id=&#34;寿司を食べた&#34;&gt;寿司を食べた&lt;/h2&gt;

&lt;p&gt;美味しいお寿司もごちそうになりました。今年一年頑張ってよかったなと思いました。寿司を食べると日本にいてよかったなと思います。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>クリスマスパーティー的なものに行った</title>
      <link>https://ymotongpoo.github.io/diary/2016/12/25/christmas-party/</link>
      <pubDate>Sun, 25 Dec 2016 23:45:34 +0900</pubDate>
      
      <guid>https://ymotongpoo.github.io/diary/2016/12/25/christmas-party/</guid>
      <description>

&lt;h2 id=&#34;anovaは優秀&#34;&gt;Anovaは優秀&lt;/h2&gt;

&lt;p&gt;先日Anova祭りにいってすぐだけれども、何も予定がなかったクリスマスに呼ばれて行ったクリスマスパーティー的なもので偶然Anovaで仕込んだローストビーフを食べた。やはりAnovaはすごい。見た目は凄くレアに見えるのにしっかり火が通っている。やはり肉料理のレベルを一段上に上げてくれると思う。&lt;/p&gt;

&lt;h2 id=&#34;フィギュアスケートのジャンプの難易度&#34;&gt;フィギュアスケートのジャンプの難易度&lt;/h2&gt;

&lt;p&gt;ダラダラと食事をしながらフィギュアスケートを観ていたときに、ふとジャンプの種類が気になってみんなで調べた。ルッツとかアクセルとかサルコウとかそれまでよくわかってなかったけど、難易度としては次の順番らしい。&lt;/p&gt;

&lt;amp-twitter data-tweetid=&#34;812993941347831808&#34; width=&#34;800&#34; height=&#34;600&#34; layout=&#34;responsive&#34;&gt;&lt;/amp-twitter&gt;


&lt;p&gt;一番むずかしいアクセルだけが前向きに飛び始めるっぽい。ルッツとフリップの違いは文章で読んだだけではわからなかった。&lt;/p&gt;

&lt;p&gt;フィギュア競技全般として評価がどのように行われてるかわからないという点で、自分はあまり好きではなかったけれど、昨日今日で観た大会は中継の画面の左上にリアルタイムで加点の様子が見れて、すぐに直前の演技の良し悪しが評価されている様子が見れて満足度が高かった。素人ながら、リアルタイムで点数を見ることで、なんとなく演技の良し悪しが次第に分かるようになった。&lt;/p&gt;

&lt;p&gt;やはりフィードバックは細かく具体的になればなるほど学習しやすいということがわかった好例だと思う。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>クリスマスイブとか</title>
      <link>https://ymotongpoo.github.io/diary/2016/12/24/christmas-eve/</link>
      <pubDate>Sat, 24 Dec 2016 11:07:17 +0900</pubDate>
      
      <guid>https://ymotongpoo.github.io/diary/2016/12/24/christmas-eve/</guid>
      <description>

&lt;h2 id=&#34;クリスマスイブの予定&#34;&gt;クリスマスイブの予定&lt;/h2&gt;

&lt;p&gt;特に特別なことはなくて、今日は大掃除でもできればいいなという感じ。家がだいぶ散らかってきたので今やっとかないと来年とかひどいことになりそう。&lt;/p&gt;

&lt;p&gt;とりあえず風呂掃除用のブラシが折れたので新しく買って、あとは風呂場のカビ退治用のスプレーを購入。1時間半ほど格闘して風呂場、洗面台、コンロまわりなどの汚れを一掃した。やはり掃除はきれいになったあとを見ると楽しい。&lt;/p&gt;

&lt;p&gt;一通り重労働な場所は終わったので、書類ケースに入っていたいらない書類などを整理して捨てた。&lt;/p&gt;

&lt;h2 id=&#34;vsc-licenserの更新&#34;&gt;vsc-licenserの更新&lt;/h2&gt;

&lt;p&gt;昨日は対応言語を増やしたので、今日は対応ライセンスを増やした。BSDの3条項ライセンスと2条項ライセンスの新旧の認識が間違ってたので、&lt;code&gt;BSD&lt;/code&gt;という設定はやめて、&lt;code&gt;BSD2&lt;/code&gt;と&lt;code&gt;BSD3&lt;/code&gt;にした。この対応で破壊的変更が入った。あとはCCの追加かなあ。&lt;/p&gt;

&lt;p&gt;また1行コメントと複数行コメントのどちらを優先して使用するかのオプションも追加した。これでとりあえずの変更はおしまい。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>低温調理の会とか</title>
      <link>https://ymotongpoo.github.io/diary/2016/12/23/anova-party/</link>
      <pubDate>Fri, 23 Dec 2016 08:42:44 +0900</pubDate>
      
      <guid>https://ymotongpoo.github.io/diary/2016/12/23/anova-party/</guid>
      <description>

&lt;h2 id=&#34;低温調理の会&#34;&gt;低温調理の会&lt;/h2&gt;

&lt;p&gt;@adamrocker と @atusi とAnovaを使って低温調理の会をした。大量の肉をAnovaでやっていくのはとても良い。自宅でもたまには塊肉を複数浮かべた絵を見たい。グラスフェッドの肉は50℃で長くやっていくと仕上げたときにふわふわの&lt;/p&gt;

&lt;h2 id=&#34;vsc-licenserの更新&#34;&gt;vsc-licenserの更新&lt;/h2&gt;

&lt;p&gt;Visual Studio Code Advent Calendar 2016に&lt;a href=&#34;http://ymotongpoo.hatenablog.com/entry/2016/12/21/164554&#34;&gt;投稿した&lt;/a&gt;ので、久々に &lt;a href=&#34;https://github.com/ymotongpoo/vsc-licenser&#34;&gt;vsc-licenser&lt;/a&gt;を更新しようかなと思い始めた。手始めに、コメントを1行コメントと複数行コメントの両方でできるようにしようと思う。&lt;/p&gt;

&lt;p&gt;まずはバージョン0.3.0として、これまでマップで対応していたコメント記法の情報を専用クラスを作って1行コメントと複数行コメントの両方を保持できるようにしたので、今後設定で好みのスタイルで出来るようになっている。&lt;/p&gt;

&lt;p&gt;そのついでで、対応言語の数を増やしたので、次は対応ライセンスの数を増やしたい。&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>