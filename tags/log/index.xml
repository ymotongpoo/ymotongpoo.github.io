<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Log on depository</title>
    <link>https://ymotongpoo.github.io/tags/log/index.xml</link>
    <description>Recent content in Log on depository</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ja-jp</language>
    <atom:link href="https://ymotongpoo.github.io/tags/log/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>DockerでJupyter Notebookの環境を作り始めた</title>
      <link>https://ymotongpoo.github.io/diary/2017/01/15/docker-jupyter/</link>
      <pubDate>Sun, 15 Jan 2017 23:49:28 +0900</pubDate>
      
      <guid>https://ymotongpoo.github.io/diary/2017/01/15/docker-jupyter/</guid>
      <description>

&lt;h2 id=&#34;dockerでjupyter-notebookの環境を作り始めた&#34;&gt;DockerでJupyter Notebookの環境を作り始めた&lt;/h2&gt;

&lt;p&gt;Scikit Learnを使って機械学習の勉強をし始めたんだけれども、どうせならDocker Imageを使おうかと思った。見てみたら、公式で配布しているものは&lt;a href=&#34;https://github.com/jupyter/docker-stacks/blob/master/base-notebook/Dockerfile#L59-L73&#34;&gt;Anacondaを使っている&lt;/a&gt;ので正直気に食わない。&lt;/p&gt;

&lt;p&gt;ということでAlpine Linuxを使って最小構成のDocker Imageを自前で作り始めた。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/ymotongpoo/dockerfiles/blob/master/jupyter-notebook/Dockerfile.jupyter-alpine&#34;&gt;Dockerfile.jupyter-alpine&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;AlpineにはBLASとLAPACKのパッケージがないので自前ビルドする必要があり、そこでちょっとはまった。&lt;/p&gt;

&lt;h2 id=&#34;婚約指輪を受け取りに行った&#34;&gt;婚約指輪を受け取りに行った&lt;/h2&gt;

&lt;p&gt;昨年末に取り寄せ注文した婚約指輪を今日受け取りに行った。こんな機会でもなければ絶対に買わないようなものなので、なかなかの体験をした。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Udemy Day1</title>
      <link>https://ymotongpoo.github.io/diary/2017/01/12/udemy-day1/</link>
      <pubDate>Thu, 12 Jan 2017 14:04:30 +0900</pubDate>
      
      <guid>https://ymotongpoo.github.io/diary/2017/01/12/udemy-day1/</guid>
      <description>

&lt;h2 id=&#34;section-3&#34;&gt;Section 3&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.youtube.com/playlist?list=PLDVKrmVEl_Wt0WoaQqDfRVt9EK1lQjZu5&#34;&gt;YouTubeのscikit-learnチュートリアル集（英語）&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.youtube.com/playlist?list=PLQVvvaa0QuDfKTOs3Keq_kaG2P55YRn5v&#34;&gt;Machine Learning with Python&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.kamishima.net/mlmpyja/&#34;&gt;機械学習の Python との出会い Machine Learning Meets Python&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.slideshare.net/yasutomo57jp/pythondeep-learning-60544586&#34;&gt;Pythonによる機械学習入門〜基礎からDeep Learningまで〜（電子情報通信学会総合大会2016）&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.slideshare.net/yasutomo57jp/python-svmdeep-learning&#34;&gt;Pythonによる機械学習入門 ～SVMからDeep Learningまで～（SSII2016）&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.amazon.co.jp/dp/4844380605/&#34;&gt;Python機械学習プログラミング 達人データサイエンティストによる理論と実践, インプレス, 2016&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.amazon.co.jp/dp/4873116988/&#34;&gt;実践 機械学習システム, オライリージャパン, 2014&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;lecture-29-33&#34;&gt;Lecture 29-33&lt;/h2&gt;

&lt;h3 id=&#34;scikit-learnでの大まかな手順&#34;&gt;scikit-learnでの大まかな手順&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;データセットを用意する&lt;/li&gt;
&lt;li&gt;学習用とテスト用にデータセットを分ける&lt;/li&gt;
&lt;li&gt;識別器を用意する&lt;/li&gt;
&lt;li&gt;学習させる&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;データセットを分ける場合はランダムに分けるように気をつけて。また分割を何度も行って、正解率の平均と標準偏差を出しておこう。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Cross Validation (交差確認)

&lt;ul&gt;
&lt;li&gt;K-fold CV (K=3, 5, 10)&lt;/li&gt;
&lt;li&gt;Leave one out&lt;/li&gt;
&lt;li&gt;Leave group out&lt;/li&gt;
&lt;li&gt;Hold out&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Stratified (層化)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;識別器はScikit Learnにいろいろプリセットで用意されていて楽ちん。&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;from sklearn import linear_model
cls = linear_model.LogisticRegression()
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;学習させるのは識別器の &lt;code&gt;fit()&lt;/code&gt; メソッドを使うだけ。&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;cls.fit(x_train, y_train)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;サンプル数によってやり方が変わってくる。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;N ~ 10 : 機械学習する意味ない&lt;/li&gt;
&lt;li&gt;N ~ 100 : Leave one out CVで可能かも。でもデータは増やしたい。&lt;/li&gt;
&lt;li&gt;N ~ 1000 : まともになってくる。10-fold CVで可能。&lt;/li&gt;
&lt;li&gt;N ~ 10000 : 良い性能が期待できる。K-fold CV (K &amp;lt; 10)&lt;/li&gt;
&lt;li&gt;N ~ 100000 : 実応用。Hold-out以外は無理。かなり工夫が必要。&lt;/li&gt;
&lt;li&gt;N &amp;gt; 100000 : 最先端&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;キーワードを拾っていく&#34;&gt;キーワードを拾っていく&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;ロジスティクス回帰&lt;/li&gt;
&lt;li&gt;Cross Validation&lt;/li&gt;
&lt;li&gt;Hold out&lt;/li&gt;
&lt;li&gt;Stratified&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>仕事始めとWindows 10の開発環境の公開</title>
      <link>https://ymotongpoo.github.io/diary/2017/01/05/windows10/</link>
      <pubDate>Thu, 05 Jan 2017 22:42:37 +0900</pubDate>
      
      <guid>https://ymotongpoo.github.io/diary/2017/01/05/windows10/</guid>
      <description>

&lt;h2 id=&#34;仕事始め&#34;&gt;仕事始め&lt;/h2&gt;

&lt;p&gt;今日は仕事始めだった。メールのスレッドが100以上未読だったうえに、ちょくちょく来てたメールにスターをつけて「後でやる」化してたので、合計で150以上のスレッドをさばいた計算になる。&lt;/p&gt;

&lt;p&gt;今日は例外だったかもしれないけれど、年末年始にコードばかり書いてたときは集中できてたなあと思う。やっぱりこういう仕事の合間にどれだけコード書けるかが今年の課題になりそうだなあ。&lt;/p&gt;

&lt;h2 id=&#34;windows-10の開発環境を公開した&#34;&gt;Windows 10の開発環境を公開した&lt;/h2&gt;

&lt;p&gt;年末年始に実家に帰ったときにXPS 13の開発環境を整えた作業ログをブログで公開したら思った以上に反響がきてた。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://ymotongpoo.hatenablog.com/entry/2017/01/05/101233&#34;&gt;Windows 10の開発環境を整えた&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;はてブの数の割にコメントがみんなマイルドなものだったのが意外だった。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>クリスマスイブとか</title>
      <link>https://ymotongpoo.github.io/diary/2016/12/24/christmas-eve/</link>
      <pubDate>Sat, 24 Dec 2016 11:07:17 +0900</pubDate>
      
      <guid>https://ymotongpoo.github.io/diary/2016/12/24/christmas-eve/</guid>
      <description>

&lt;h2 id=&#34;クリスマスイブの予定&#34;&gt;クリスマスイブの予定&lt;/h2&gt;

&lt;p&gt;特に特別なことはなくて、今日は大掃除でもできればいいなという感じ。家がだいぶ散らかってきたので今やっとかないと来年とかひどいことになりそう。&lt;/p&gt;

&lt;p&gt;とりあえず風呂掃除用のブラシが折れたので新しく買って、あとは風呂場のカビ退治用のスプレーを購入。1時間半ほど格闘して風呂場、洗面台、コンロまわりなどの汚れを一掃した。やはり掃除はきれいになったあとを見ると楽しい。&lt;/p&gt;

&lt;p&gt;一通り重労働な場所は終わったので、書類ケースに入っていたいらない書類などを整理して捨てた。&lt;/p&gt;

&lt;h2 id=&#34;vsc-licenserの更新&#34;&gt;vsc-licenserの更新&lt;/h2&gt;

&lt;p&gt;昨日は対応言語を増やしたので、今日は対応ライセンスを増やした。BSDの3条項ライセンスと2条項ライセンスの新旧の認識が間違ってたので、&lt;code&gt;BSD&lt;/code&gt;という設定はやめて、&lt;code&gt;BSD2&lt;/code&gt;と&lt;code&gt;BSD3&lt;/code&gt;にした。この対応で破壊的変更が入った。あとはCCの追加かなあ。&lt;/p&gt;

&lt;p&gt;また1行コメントと複数行コメントのどちらを優先して使用するかのオプションも追加した。これでとりあえずの変更はおしまい。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>低温調理の会とか</title>
      <link>https://ymotongpoo.github.io/diary/2016/12/23/anova-party/</link>
      <pubDate>Fri, 23 Dec 2016 08:42:44 +0900</pubDate>
      
      <guid>https://ymotongpoo.github.io/diary/2016/12/23/anova-party/</guid>
      <description>

&lt;h2 id=&#34;低温調理の会&#34;&gt;低温調理の会&lt;/h2&gt;

&lt;p&gt;@adamrocker と @atusi とAnovaを使って低温調理の会をした。大量の肉をAnovaでやっていくのはとても良い。自宅でもたまには塊肉を複数浮かべた絵を見たい。グラスフェッドの肉は50℃で長くやっていくと仕上げたときにふわふわの&lt;/p&gt;

&lt;h2 id=&#34;vsc-licenserの更新&#34;&gt;vsc-licenserの更新&lt;/h2&gt;

&lt;p&gt;Visual Studio Code Advent Calendar 2016に&lt;a href=&#34;http://ymotongpoo.hatenablog.com/entry/2016/12/21/164554&#34;&gt;投稿した&lt;/a&gt;ので、久々に &lt;a href=&#34;https://github.com/ymotongpoo/vsc-licenser&#34;&gt;vsc-licenser&lt;/a&gt;を更新しようかなと思い始めた。手始めに、コメントを1行コメントと複数行コメントの両方でできるようにしようと思う。&lt;/p&gt;

&lt;p&gt;まずはバージョン0.3.0として、これまでマップで対応していたコメント記法の情報を専用クラスを作って1行コメントと複数行コメントの両方を保持できるようにしたので、今後設定で好みのスタイルで出来るようになっている。&lt;/p&gt;

&lt;p&gt;そのついでで、対応言語の数を増やしたので、次は対応ライセンスの数を増やしたい。&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>